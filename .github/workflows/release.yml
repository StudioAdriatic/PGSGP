name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  matrix-setup:
    uses: ./.github/workflows/matrix-setup.yml

  test:
    needs: matrix-setup
    uses: ./.github/workflows/test-reusable.yml
    with:
      godot_version: '4.4.1'

  build:
    needs: test
    uses: ./.github/workflows/build-reusable.yml
    with:
      use_matrix: true
      upload_artifacts: true

  release:
    runs-on: ubuntu-latest
    needs: [build, matrix-setup]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Download all AARs
        uses: actions/download-artifact@v4
        with:
          path: aars

      - name: Generate GDAP files for each Godot version
        run: |
          # Create directory for GDAP files
          mkdir -p gdap-files
          
          # Generate GDAP files for each Godot version
          for godot_version in ${{ needs.matrix-setup.outputs.godot-versions-string }}; do
            echo "Generating GDAP file for Godot $godot_version"
            python3 generate_gdap.py app/build.gradle "gdap-files/GodotPlayGamesServices-godot-${godot_version}.gdap"
            
            # Update the binary name in the GDAP file to match the AAR name
            sed -i "s/GodotPlayGamesServices.release.aar/GodotPlayGamesServices-godot-${godot_version}.aar/" "gdap-files/GodotPlayGamesServices-godot-${godot_version}.gdap"
          done

      - name: List generated files
        run: |
          echo "Generated GDAP files:"
          ls -la gdap-files/
          echo "Available AAR files:"
          find aars/ -name "*.aar" -type f

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            aars/*/*.aar
            gdap-files/*.gdap
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
