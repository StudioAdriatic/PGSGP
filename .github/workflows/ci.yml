name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create mock godot-lib for tests
        run: |
          mkdir -p godot-lib
          echo "configurations.maybeCreate(\"default\")" > godot-lib/build.gradle
          echo "artifacts.add(\"default\", file('godot-lib.mock.aar'))" >> godot-lib/build.gradle
          touch godot-lib/godot-lib.mock.aar

      - name: Run unit tests
        run: ./gradlew test --continue

      - name: Generate test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Results
          path: app/build/test-results/test/*.xml
          reporter: java-junit

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            app/build/reports/tests/
            app/build/test-results/

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: app/build/reports/coverage/

  lint:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create mock godot-lib for lint
        run: |
          mkdir -p godot-lib
          echo "configurations.maybeCreate(\"default\")" > godot-lib/build.gradle
          echo "artifacts.add(\"default\", file('godot-lib.mock.aar'))" >> godot-lib/build.gradle
          touch godot-lib/godot-lib.mock.aar

      - name: Run lint
        run: ./gradlew lint

      - name: Upload lint results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-results
          path: app/build/reports/lint-results.html

  build-check:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create mock godot-lib for build
        run: |
          mkdir -p godot-lib
          echo "configurations.maybeCreate(\"default\")" > godot-lib/build.gradle
          echo "artifacts.add(\"default\", file('godot-lib.mock.aar'))" >> godot-lib/build.gradle
          touch godot-lib/godot-lib.mock.aar

      - name: Build project
        run: ./gradlew assembleRelease

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: app/build/outputs/aar/
